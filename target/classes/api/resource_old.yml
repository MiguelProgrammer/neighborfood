openapi: 3.0.0
info:
  title: Swagger NeighborFood - OpenAPI 3.0
  description: |-
    Fiap Challenge - Phase 1 - NeighborFood Project
  termsOfService: http://swagger.io/terms/
  contact:
    email: miguel.silva@mackenzista.com.br
  version: 0.0.1

tags:
  - name: login
    description: "Realizar login, com cpf"
  - name: loginAdm
    description: "Realizar login, com cpf"
  - name: register
    description: "Se cadastrar via nome, email e cpf"
  - name: registerAdm
    description: "Se cadastrar via nome, email e cpf"
  - name: menu
    description: "Apresenta os opcionais"
  - name: order
    description: "Realização do pedido"
  - name: orders
    description: "Lista os pedidos"
  - name: payment
    description: "Realização do pagamento"
  - name: follow-up
    description: "Acompanhar status do pedido"
  - name: customers
    description: "Para gerenciamento de campanhas promocionais"
  - name: products
    description: "Gerenciamento de produtos"


paths:

  /neighborfood/login:
    post:
      tags:
        - login
      summary: "Se cadastrar, logar"
      description: "Identificação do cliente"
      operationId: login
      requestBody:
        description: Identifica um cliente logado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequest'
      responses:
        '200':
          description: Usuário logado
          content:
            application/json:
              schema:
                $ref: ""
        '400':
          description: request inválida

  /neighborfood/cadastro:
    post:
      tags:
        - register
      summary: "Se cadastrar, logar"
      description: "Cria cliente"
      operationId: register
      requestBody:
        description: Cria um novo cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequest'
      responses:
        '200':
          description: Usuário logado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        '400':
          description: request inválida

  /neighborfood/menu:
    get:
      tags:
        - menu
      summary: "Apresenta o menu com itens opcionais"
      description: "menu de opções"
      operationId: menu
      responses:
        '200':
          description: Apresenta os itens de menu
          content:
            application/json:
              schema:
                type: string
        '400':
          description: request inválida

  /neighborfood/pedido:
    post:
      tags:
        - order
      summary: Realizar um pedido
      description:  Fazer um  pedido
      operationId: order
      requestBody:
        description: Cria um novo pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido'
      responses:
        '200':
          description: Pedido criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcompanhamentoResponse'
        '400':
          description: request inválida

  /neighborfood/pedido/update:
    put:
      tags:
        - order
      summary: Atualizar um pedido
      description:  Atualizar itens de um pedido já realizado
      operationId: updateOrder
      requestBody:
        description: atualiar um  pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido'
      responses:
        '200':
          description: Pedido atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcompanhamentoResponse'
        '400':
          description: request inválida

  /neighborfood/acompanhamento/{idPedido}:
    get:
      tags:
        - follow-up
      summary: Procura o status de um pedido
      description: Retorna o status de um pedido
      operationId: findOrderByIdOrder
      parameters:
        - name: idPedido
          in: path
          description: id do pedido
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcompanhamentoResponse'
        '400':
          description: Id inválido
        '404':
          description: Pedido não encontrado

  /neighborfood/pagamento:
    post:
      tags:
        - payment
      summary: Realiza o pagamento do pedido
      description: Realiza pagamento
      operationId: payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pagamento'
      responses:
        '200':
          description: pagamento realizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcompanhamentoResponse'
        '400':
          description: Id inválido
        '404':
          description: Pedido não encontrado

  /neighborfood/painel/cliente:
    post:
      tags:
        - customers
      summary: Envia mimo ao último cliente que realizou um pedido
      description: Envia mimo ao cliente
      operationId: sendBonus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MimoRequest'
      responses:
        '200':
          description: Mimo enviado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mimo'
        '400':
          description: Id inválido
        '404':
          description: Mimo não disponível

  /neighborfood/painel/pedido/lista/{idAdmin}:
    get:
      tags:
        - orders
      summary: Lista de pedidos efetuados contendo seus clientes, itens, status, valores e data de pedido e data de entrega.
      description: Lista os pedidos recebidos
      operationId: listOrders
      parameters:
        - name: idAdmin
          in: path
          description: id identificador do administrador
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de pedidos
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AcompanhamentoResponse'

        '400':
          description: Id inválido
        '404':
          description: Mimo não disponível

  /neighborfood/painel/login:
    post:
      tags:
        - loginAdm
      summary: "Cadastrar adm, logar adm"
      description: "Identificação do adm"
      operationId: loginAdm
      requestBody:
        description: Identifica um adminsitrador logado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRequest'
      responses:
        '200':
          description: Usuário logado
          content:
            application/json:
              schema:
                $ref: ""
        '400':
          description: request inválida

  /neighborfood/painel/cadastro:
    post:
      tags:
        - registerAdm
      summary: "Se cadastrar, logar"
      description: "Cria cliente"
      operationId: registerAdm
      requestBody:
        description: Cria um novo administrador
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRequest'
      responses:
        '200':
          description: Usuário cadastrao
          content:
            application/json:
              schema:
                $ref: ""
        '400':
          description: request inválida


  /neighborfood/painel/produto/cadastro/{idAdmin}:
    get:
      tags:
        - products
      summary: Cadastra produtos
      description: Cadastra produtos em lote
      operationId: registerProduct
      parameters:
        - name: idAdmin
          in: path
          description: id identificador do administrador
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Produtos cadastrados
          content:
            application/json:
              schema:
                $ref: ""
        '400':
          description: Id inválido
        '404':
          description: Produto inválido


components:
  schemas:

    MimoRequest:
      type: object
      properties:
        idCliente:
          type: integer
          format: int64

    Mimo:
      type: object
      properties:
        codigo:
          type: string
        desconto:
          type: number
        idCliente:
          type: integer
          format: int64

    Pagamento:
      type: object
      properties:
        idPedido:
          type: integer
          format: int64
        pagou:
          type: boolean

    Pedido:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idCliente:
          type: integer
          format: int64
        Itens:
          type: array
          items:
            $ref: '#/components/schemas/Produto'

    Produto:
      type: object
      properties:
        nome:
          type: string
        preco:
          type: number
          format: double
        categoria:
          $ref: '#/components/schemas/CategoriaCombo'
        descricao:
          type: string
        img:
          type: string

    AcompanhamentoResponse:
      type: object
      properties:
        pedido:
          $ref: '#/components/schemas/Pedido'
        status:
          $ref: '#/components/schemas/Acompanhamento'
        total:
          type: number
          format: double



    Acompanhamento:
      type: string
      enum:
        - RECEBIDO
        - EM_PREPARACAO
        - PRONTO
        - FINALIZADO

    CategoriaCombo:
      type: string
      enum:
        - LANCHE
        - ACOMPANHAMENTO
        - BEBIDA
        - SOBREMESA

    AdminRequest:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
        cpf:
          type: string

    ClienteRequest:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
        cpf:
          type: string

    Cliente:
      type: object